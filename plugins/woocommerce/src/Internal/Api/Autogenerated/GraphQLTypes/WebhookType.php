<?php

namespace Automattic\WooCommerce\Internal\Api\Autogenerated\GraphQLTypes;

use Automattic\WooCommerce\Internal\Api\GraphQL\GraphQLController;
use GraphQL\Type\Definition\ObjectType;
use GraphQL\Type\Definition\Type;

class WebhookType extends ObjectType {
	public function __construct() {
		$config = array(
			'name'         => 'Webhook',
			'description'  => __('A webhook.', 'woocommerce'),
			'fields'       => $this->get_fields(),
			'interfaces' => [
				GraphQLController::resolve_type('WebhookDefinition')
			]
		);

		parent::__construct($config);
	}

	private function get_fields() {
		$fields = [
			'id' => [
				'description' => 'Webhook id.',
				'type' =>Type::nonNull(Type::int())
			],
			'failure_count' => [
				'description' => 'Webhook failure count.',
				'type' =>Type::nonNull(Type::int())
			],
			'status' => [
				'description' => 'Webhook status.',
				'type' =>Type::nonNull(GraphQLController::resolve_type('WebhookStatus'))
			],
			'pending_delivery' => [
				'description' => 'Webhook is pending delivery or not.',
				'type' =>Type::nonNull(Type::boolean())
			],
			'date_created' => [
				'description' => 'Webhook creation date.',
				'type' =>Type::nonNull(Type::string())
			],
			'user' => [
				'description' => 'Webhook user.',
				'type' => GraphQLController::resolve_type('User'),
                'args' => [
                    'foo' => Type::nonNull(Type::int())
                ],
                /*'resolve' => function ($rootValue, $args) {
                    $x = $rootValue->user;
                    $x->id = $args['foo'];
                    return $x;
                }*/
			],
		];

        $fields = array_merge($fields, GraphQLController::resolve_type('WebhookDefinition')->get_fields());

        return $fields;
	}
}
