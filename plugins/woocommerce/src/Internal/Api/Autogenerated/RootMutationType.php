<?php

namespace Automattic\WooCommerce\Internal\Api\Autogenerated;

use Automattic\WooCommerce\Api\InputTypes\CreateWebhookInput;
use Automattic\WooCommerce\Api\Webhooks;
use Automattic\WooCommerce\Internal\Api\GraphQL\GraphQLController;
use GraphQL\Type\Definition\ObjectType;
use GraphQL\Type\Definition\ResolveInfo;
use GraphQL\Type\Definition\Type;

class RootMutationType extends ObjectType {

	private $container;

	public function __construct() {
		$this->container = wc_get_container();

		$config = array(
			'name'         => 'Mutation',
			'description'  => 'Base mutation type.',
			'fields'       => $this->get_fields(),
			/*'resolveField' => function( $value, $args, $context, ResolveInfo $info ) {
				return $this->resolve_field( $value, $args, $context, $info );
			},*/
		);

		parent::__construct( $config );
	}

    private function get_fields()
    {
        return [
            'CreateWebhook' => [
                'type' => Type::nonNull(GraphQLController::resolve_type('Webhook')),
                'description' => 'Create new webhook.',
                'args' => [
                    'input' => [
                        'type' => Type::nonNull(GraphQLController::resolve_type('CreateWebhookInput'))
                    ]
                ],
                'resolve' => fn($objectValue, array $args, $context, ResolveInfo $info) => $this->container->get(Webhooks::class)->create_webhook($args['input'])
            ]
        ];
    }

    private function resolve_field( $value, $args, $context, ResolveInfo $info ) {
        $resolver = $this->get_fields()[$info->fieldName]['resolve'] ?? null;

        if(is_null($resolver)) {
            throw new \Exception("Unknown mutation: {$info->fieldName}");
        }

        return $resolver($value, $args, $context, $info);
    }
}
